---
// Theme Toggle Component - Global site-wide theme switcher
---

<button
  id="theme-toggle"
  class="fixed top-8 right-8 flex items-center gap-2 rounded-full px-4 py-2 shadow-lg transition-all duration-300 hover:scale-105 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#9c8671] focus-visible:ring-offset-2 z-50"
  aria-label="Toggle theme"
  aria-pressed="false"
>
  <!-- Sun Icon (shown in dark mode) -->
  <svg
    id="sun-icon"
    class="icon hidden"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    aria-hidden="true"
  >
    <circle cx="12" cy="12" r="5"/>
    <line x1="12" y1="1" x2="12" y2="3"/>
    <line x1="12" y1="21" x2="12" y2="23"/>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
    <line x1="1" y1="12" x2="3" y2="12"/>
    <line x1="21" y1="12" x2="23" y2="12"/>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
  </svg>

  <!-- Moon Icon (shown in light mode) -->
  <svg
    id="moon-icon"
    class="icon"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    aria-hidden="true"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
  </svg>

  <span id="theme-label" class="text-sm font-medium">Dark</span>
</button>

<script>
  // Theme toggle functionality
  const button = document.getElementById('theme-toggle');
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');
  const label = document.getElementById('theme-label');

  function updateUI() {
    if (typeof window.getTheme !== 'function') return;

    const theme = window.getTheme();
    const isDark = theme === 'dark';

    // Toggle icon visibility
    if (sunIcon && moonIcon) {
      sunIcon.classList.toggle('hidden', !isDark);
      moonIcon.classList.toggle('hidden', isDark);
    }

    // Update label text
    if (label) {
      label.textContent = isDark ? 'Light' : 'Dark';
    }

    // Update aria-pressed
    if (button) {
      button.setAttribute('aria-pressed', String(isDark));
      button.setAttribute(
        'aria-label',
        `Switch to ${isDark ? 'light' : 'dark'} theme`
      );
    }
  }

  // Toggle theme on click
  if (button) {
    button.addEventListener('click', () => {
      if (typeof window.toggleTheme === 'function') {
        window.toggleTheme();
        updateUI();
      }
    });
  }

  // Initialize UI on page load
  updateUI();

  // Update UI when navigating between pages
  document.addEventListener('astro:after-swap', updateUI);
</script>

<style>
  #theme-toggle {
    background-color: var(--bg-card);
    color: var(--text-body);
  }

  .icon {
    flex-shrink: 0;
  }
</style>
